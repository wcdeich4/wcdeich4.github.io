"use strict";(self.webpackChunkAngularArtGallery=self.webpackChunkAngularArtGallery||[]).push([[630],{131:(o,g,m)=>{m.d(g,{E:()=>h});class h{static isUndefinedOrNullOrEmptyOrWhitespace(i){return typeof i>"u"||null===i||0===i.trim().length}static isNumeric(i){return/^-?[\d.]+(?:e-?\d+)?$/.test(i)}static replaceAllCharactersExceptLettersAndNumbers(i,u){let d=i;return h.isUndefinedOrNullOrEmptyOrWhitespace(i)||(d=i.replace(/[^a-z0-9]/gi,u)),d}}},16:(o,g,m)=>{m.d(g,{X:()=>h});let h=(()=>{class f{}return f.Tolerance=5e-5,f})()},28:(o,g,m)=>{m.d(g,{t:()=>f});var h=m(16);let f=(()=>{class i extends h.X{log(){console.log(this.elements)}set(...d){this.elements=d}copyFromVectorWithLimit(d,e){for(let t=0;t<e;t++)this.elements[t]=d.elements[t]}toString(){let d="<",e=0;for(let t of this.elements)e>0&&(d+=", "),d+=t,e++;return d+=">",d}}return i.DefaultStringInputDelimeter=" ",i})()},630:(o,g,m)=>{m.d(g,{Q:()=>u});var h=m(131),f=m(16),i=m(28);class u extends i.t{constructor(e,t){super(),null==e?null!=t&&(this.elements=new Array(t)):this.elements=e}transformWorld2DToCanvas2DCoordinates(e){this.elements[0]=e.world2DXtoCanvasX(this.elements[0]),this.elements[1]=e.world2DYtoCanvasY(this.elements[1])}getPerpendicularClockwise(){return new u([this.elements[1],-this.elements[0]])}getPerpendicularCounterClockwise(){return new u([-this.elements[1],this.elements[0]])}is2D(){return 0===this.elements[2]}canSee(e,t,l,s){return t[0]=e[1].elements[0]-e[0].elements[0],t[1]=e[1].elements[1]-e[0].elements[1],t[2]=e[1].elements[2]-e[0].elements[2],l[0]=e[2].elements[0]-e[1].elements[0],l[1]=e[2].elements[1]-e[1].elements[1],l[2]=e[2].elements[2]-e[1].elements[2],u.crossProductArrays(t,l,s),0<=this.elements[0]*s[0]+this.elements[1]*s[1]+this.elements[2]*s[2]}static crossProductArrays(e,t,l){l[0]=e[1]*t[2]-e[2]*t[1],l[1]=e[2]*t[0]-e[0]*t[2],l[2]=e[0]*t[1]-e[1]*t[0]}crossProduct(e){const t=new Array(3);return u.crossProductArrays(this.elements,e.elements,t),new u(t)}setFromDelimetedString(e,t=" "){let l=null;if(!h.E.isUndefinedOrNullOrEmptyOrWhitespace(e)&&(l=h.E.isUndefinedOrNullOrEmptyOrWhitespace(t)?e.split(/\s+/):e.split(t),null!=l&&l.length>0)){this.elements=new Array;for(let s=0;s<l.length;s++)!h.E.isUndefinedOrNullOrEmptyOrWhitespace(l[s])&&h.E.isNumeric(l[s])&&this.elements.push(parseFloat(l[s]))}}magnitude(){let e=0;if(null!=this.elements&&this.elements.length>0)for(let t=0;t<this.elements.length;t++)e+=this.elements[t]*this.elements[t];return Math.sqrt(e)}normalize(){let e=this.magnitude();if(0!==e)for(let t=0;t<this.elements.length;t++)this.elements[t]/=e}negate(){for(let e=0;e<this.elements.length;e++)this.elements[e]=-this.elements[e]}getNegated(){const e=this.clone();return e.negate(),e}dotProduct(e){let t=0;for(let l=0;l<e.elements.length;l++)t+=this.elements[l]*e.elements[l];return t}copyFromVectorWithCoefficientAndLimit(e,t,l){for(let s=0;s<l;s++)this.elements[s]=e*t.elements[s]}addVectorWithCoefficientAndLimit(e,t,l){for(let s=0;s<l;s++)this.elements[s]=this.elements[s]+e*t.elements[s]}addWithLimit(e,t){for(let l=0;l<t;l++)this.elements[l]+=e.elements[l]}add(e){for(let t=0;t<e.elements.length;t++)this.elements[t]+=e.elements[t]}getSumWith(e){const t=this.clone();return t.add(e),t}subtract(e){for(let t=0;t<e.elements.length;t++)this.elements[t]-=e.elements[t]}getDifferenceWith(e){const t=this.clone();return t.subtract(e),t}multiplyByScalar(e){for(let t=0;t<this.elements.length;t++)this.elements[t]*=e}divideByScalar(e){for(let t=0;t<this.elements.length;t++)this.elements[t]/=e}getMidPointWith(e){let t=this.getSumWith(e);return t.divideByScalar(2),t}getWeightedAverageWithAnotherVector(e,t,l){const s=this.clone();for(let n=0;n<t.elements.length;n++)s.elements[n]=s.elements[n]*e+t.elements[n]*l;return s}getDistanceTo(e){let t=0,l=0,s=Math.min(this.elements.length,e.elements.length);for(let n=0;n<e.elements.length;n++)l=this.elements[n]-e.elements[n],t+=l*l;if(this.elements.length>s)for(let n=s;n<this.elements.length;n++)t+=this.elements[n]*this.elements[n];if(e.elements.length>s)for(let n=s;n<e.elements.length;n++)t+=e.elements[n]*e.elements[n];return t=Math.sqrt(t),t}clone(){return this.cloneUpToLimit(this.elements.length)}cloneUpToLimit(e){const t=new u(null,this.elements.length);if(e=Math.min(e,this.elements.length),null!=this.elements&&e>0){t.elements=new Array(e);for(let l=0;l<e;l++)t.elements[l]=this.elements[l]}return t}equals(e){let t=!1;if(typeof e>"u")t=!1;else if(null==e)t=!1;else if(e instanceof i.t)if(null==this.elements&&null==e.elements)t=!0;else if(0===this.elements.length&&0===e.elements.length)t=!0;else if(this.elements.length===e.elements.length){t=!0;for(let l=0;l<this.elements.length;l++)if(Math.abs(this.elements[l]-e.elements[l])>f.X.Tolerance){t=!1;break}}else t=!1;else t=!1;return t}}}}]);